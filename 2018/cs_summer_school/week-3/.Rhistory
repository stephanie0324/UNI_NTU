levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region,mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.5,7,by=0.1))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region,mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.5,7,by=0.1))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
install.packages(Hmisc)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
library(Hmisc)
library(plyr)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
library(Hmisc)
library(dplyr)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean,na.rm=TRUE)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean,na.rm=TRUE)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean,na.action = na.pass,na.rm=TRUE)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean,na.rm=TRUE)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean,na.rm=T)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$region,CON$Happiness.Score, mean,na.rm=T)
library(tidyverse)
data2017 = read.csv("../week-3/data/2017.csv")
ne<-c(1,2,3,4,5)
NE<-data2017[ne,]
asia<-c(33,79,55,51,26)
ASIA<-data2017[asia,]
#使用rbind將同樣欄位的表格接合
#創一個新欄位來分出兩個表格的不同
#這樣在group的時候才可以分別
ASIA$region = "ASIA"
NE$region = "NE"
CON = rbind(ASIA, NE)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$region,CON$Happiness.Score, mean,na.rm=T)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean,na.rm=T)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.5,7,by=0.1))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.1))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.5))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.01))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.5))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
anova(m2 <- update(m1, . ~ . +
Economy..GDP.per.Capita., data = CON))
anova(m1 <- lm(Happiness.Score ~ region, data = CON))
ggplot(data = CON, aes( group = region, y =Happiness.Score , x =Economy..GDP.per.Capita. )) + geom_point() +
stat_smooth(aes(group = region, y =Happiness.Score , x = Economy..GDP.per.Capita., method = 'lm', se = F)) +
facet_grid( . ~ region, scales = "free_x") +
labs( x = 'happiness', y = 'GDP per capita' )
#free_x讓電腦自己計算出適當的間距
ggplot(data = CON, aes( group = region, y =Happiness.Score , x =Economy..GDP.per.Capita. )) + geom_point() +
stat_smooth(aes(group = region, y =Happiness.Score , x = Economy..GDP.per.Capita., method = 'lm', se = F)) +
facet_grid( . ~ region, scales = "free_x") +
labs( x = 'GDP per capita', y = 'happiness' )
#free_x讓電腦自己計算出適當的間距
ggplot(data = CON, aes( group = region, y =Happiness.Score , x =Economy..GDP.per.Capita. )) + geom_point() +
stat_smooth(aes(group = region, y =Happiness.Score , x = Economy..GDP.per.Capita., method = 'lm', se = F)) +
facet_grid( . ~ region, scales = "free_y") +
labs( x = 'GDP per capita', y = 'happiness' )
#free_x讓電腦自己計算出適當的間距
anova(m1 <- lm(Happiness.Score ~ region, data = CON))
ggplot(data = CON, aes( group = region, y =Happiness.Score , x =Economy..GDP.per.Capita. )) + geom_point() +
stat_smooth(aes(group = region, y =Happiness.Score , x = Economy..GDP.per.Capita., method = 'lm', se = F)) +
facet_grid( . ~ region, scales = "free_x") +
labs( x = 'GDP per capita', y = 'happiness' )
#free_x讓電腦自己計算出適當的間距
anova(m2 <- update(m1, . ~ . +
Economy..GDP.per.Capita., data = CON))
library(tidyverse)
data2017 = read.csv("../week-3/data/2017.csv")
ne<-c(1,2,3,4,5)
NE<-data2017[ne,]
asia<-c(33,79,55,51,26)
ASIA<-data2017[asia,]
pac<-c(8,10)
PAC<-data2017[pac,]
nra<-c(7,14)
NRA<-data2017[nra,]
afr<-c(101,84,95,53,128)
AFR<-data2017[afr,]
#使用rbind將同樣欄位的表格接合
#創一個新欄位來分出兩個表格的不同
#這樣在group的時候才可以分別
ASIA$region = "ASIA"
NE$region = "NE"
PAC$region="PAC"
NRA$region="NRA"
AFR$region="AFR"
CON = rbind(ASIA, NE,PAC,NRA,AFR)
str(CON)
head(CON)
summary(CON)
library(ggplot2)
library(dplyr)
ggplot(data=CON,aes(x =region, y = Happiness.Score))+
geom_boxplot() + coord_flip() +
labs( y = 'happiness', x = 'region',
title = 'regions / happiness Score Box')
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA','PCA','NRA','AFR'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.5))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA','PCA','NRA','AFR'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.5))+
geom_hline(yintercept = mean(CON$Happiness.Score),color=region,
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA','PCA','NRA','AFR'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.5))+
geom_hline(yintercept = mean(CON$Happiness.Score),color="region"",
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA','PCA','NRA','AFR'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.5))+
geom_hline(yintercept = mean(CON$Happiness.Score),color="region",
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
library(Hmisc)
CON$region <-factor(CON$region,
levels = c('NE','ASIA','PCA','NRA','AFR'))
tapply(CON$Happiness.Score,CON$region, mean)
ggplot(data=CON,aes(x=region,
y=Happiness.Score))+
stat_summary(fun.data = 'mean_cl_boot',size=1)+
scale_y_continuous(breaks = seq(6.0,7.5,by=0.5))+
geom_hline(yintercept = mean(CON$Happiness.Score),
linetype='dotted')+
labs(x='Region',y='Happiness')+
coord_flip()
anova(m1 <- lm(Happiness.Score ~ region, data = CON))
ggplot(data = CON, aes( group = region, y =Happiness.Score , x =Economy..GDP.per.Capita.)) + geom_point() +
stat_smooth(aes(group = region, y =Happiness.Score , x = Economy..GDP.per.Capita., method = 'lm', se = F)) +
facet_grid( . ~ region, scales = "free_x") +
labs( x = 'GDP per capita', y = 'happiness' )
#free_x讓電腦自己計算出適當的間距
ggplot(data = CON, aes( group = region, y =Happiness.Score , x =Economy..GDP.per.Capita.)) + geom_point() +
stat_smooth(aes(group = region, y =Happiness.Score , x = Economy..GDP.per.Capita., method = 'lm', se = F)) +
facet_grid( . ~ region, scales = "free_x","free_y") +
labs( x = 'GDP per capita', y = 'happiness' )
ggplot(data = CON, aes( group = region, y =Happiness.Score , x =Economy..GDP.per.Capita.)) + geom_point() +
stat_smooth(aes(group = region, y =Happiness.Score , x = Economy..GDP.per.Capita., method = 'lm', se = F)) +
facet_grid( . ~ region, scales = "free_x",space="free") +
labs( x = 'GDP per capita', y = 'happiness' )
#free_x讓電腦自己計算出適當的間距
anova(m2 <- update(m1, . ~ . +
Economy..GDP.per.Capita., data = CON))
ggplot(data = CON, aes( group = region, y =Happiness.Score , x =Economy..GDP.per.Capita.)) + geom_point() +
stat_smooth(aes(group = region, y =Happiness.Score , x = Economy..GDP.per.Capita., method = 'lm', se = F)) +
facet_grid( . ~ region, scales = "free_x") +
labs( x = 'GDP per capita', y = 'happiness' )
#free_x讓電腦自己計算出適當的間距
#或許跟地區無關
anova(m3 <- update(m2, . ~ . - region,  data = CON))
#將結果統一放在一個list
res<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res[[2]])$r.sq-res[[3]]$r.sq)/res_lm[[2]]$r.sq
#將結果統一放在一個list
res<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res[[2]]$r.sq-res[[3]]$r.sq)/res_lm[[2]]$r.sq
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res[[2]]$r.sq-res[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3,m2)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res[[2]]$r.sq-res[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3,m2)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res[[2]]$r.sq-res[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
View(m3)
View(m2)
#或許跟地區無關
anova(m3 <- update(m2, . ~ . - region,  data = CON))
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
View(m3)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
View(m1)
View(m1)
View(res_lm)
#或許跟地區無關
anova(m3 <- update(m2, . ~ . - region,  data = CON))
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), 'length<-',summary)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm.'length<-',n)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm.`length<-`,n)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`,n)
View(res_lm)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`,n,result=hide)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`,n,results="hide")
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`, n ,results="hide")
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary,results="hide")
lapply(res_lm,`length<-`, n )
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`, n,results="hide" )
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`, results="hide" )
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`,NA )
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`,n )
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
lapply(res_lm,`length<-`,n )
#比較在控制gdp之下，地區的效果
(res[[2]]$r.sq-res[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
View(res_lm)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
#比較在控制gdp之下，地區的效果
#比較在控制地區狀況下，gdp的效果
(res_lm[[2]]$r.sq-res_lm[[1]])/res_lm[[1]]$r.sq
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
#比較在控制gdp之下，地區的效果
#比較在控制地區狀況下，gdp的效果
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1,m2)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3),summary)
#比較在控制gdp之下，地區的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m2, m3)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m1)
library(m2 <- lm(Happiness.Score ~region +Economy..GDP.per.Capita.educational.resources- 1,
data = CON)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數'))
library(coefplot)
install.packages("coefplot")
library(coefplot)
m2 <- lm(Happiness.Score ~region +Economy..GDP.per.Capita.educational.resources- 1,
data = CON
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
library(coefplot)
m2 <- lm(Happiness.Score ~region +Economy..GDP.per.Capita.educational.resources- 1,
data = CON
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
library(coefplot)
m2 <- lm(Happiness.Score ~region +Economy..GDP.per.Capita.educational.resources- 1,
data = CON)
library(coefplot)
m2 <- lm(Happiness.Score ~region +Economy..GDP.per.Capita.educational.- 1,
data = CON)
library(coefplot)
m2 <- lm(Happiness.Score ~region +Economy..GDP.per.Capita.- 1,
data = CON)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
library(coefplot)
m2 <- lm(Happiness.Score ~region +Economy..GDP.per.Capita.- 1,
data = CON)
coefplot(m2, xlab = 'estimated value', ylab = 'lm_variable', title = 'variable = happiness')
fit_m2 <- data.frame(CON[, c(2, 12, 13)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(CON[, c(19,17)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(CON[, c(1,14,33)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(CON[, c(2, 12, 13)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(CON[, c(3, 6, 13)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(CON[, c(3, 6, 13)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(CON[, c(3, 6, 13)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(choose1[, c(3, 6, 13)],
fitted = fitted(m2),
resid = resid(m2),
infl = influence(m2)$hat )
fit_m2 <- data.frame(CON[, c(3, 6, 13)],
fitted = fitted(m2),
resid = resid(m2),
infl = influence(m2)$hat )
library(tidyverse)
data2017 = read.csv("../week-3/data/2017.csv")
ne<-c(1,2,3,4,5)
NE<-data2017[ne,]
asia<-c(33,79,55,51,26)
ASIA<-data2017[asia,]
pac<-c(8,10)
PAC<-data2017[pac,]
nra<-c(7,14)
NRA<-data2017[nra,]
afr<-c(101,84,95,53,128)
AFR<-data2017[afr,]
#使用rbind將同樣欄位的表格接合
#創一個新欄位來分出兩個表格的不同
#這樣在group的時候才可以分別
ASIA$region = "ASIA"
NE$region = "NE"
PAC$region="PAC"
NRA$region="NRA"
AFR$region="AFR"
CON = rbind(ASIA, NE,PAC,NRA,AFR)
View(CON)
View(CON)
#此推論為人均GDP與開心指數更有關係
anova(m2 <- update(m1, . ~ . +
Economy..GDP.per.Capita., data = CON))
#或許跟地區無關
anova(m3 <- update(m2, . ~ . - region,  data = CON))
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
#比較在控制地區狀況下，gdp的效果
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1,m2)
View(res_lm)
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
#比較在控制地區狀況下，gdp的效果
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1,m2)
library(coefplot)
m2 <- lm(Happiness.Score ~region +Economy..GDP.per.Capita.- 1,
data = CON)
coefplot(m2, xlab = 'estimated value', ylab = 'lm_variable', title = 'variable = happiness')
fit_m2 <- data.frame(CON[, c(3, 6, 13)],
fitted = fitted(m2),
resid = resid(m2),
infl = influence(m2)$hat )
View(m1)
#此推論為開心與地區有關
anova(m1 <- lm(Happiness.Score ~ region, data = CON))
#將結果統一放在一個list
res_lm<-lapply(list(m1,m2,m3), summary)
#比較在控制gdp之下，地區的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
#比較在控制地區狀況下，gdp的效果
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1,m2)
